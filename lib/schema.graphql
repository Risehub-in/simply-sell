#  ---------------- Queries -----------------------
type Query {
  orders: Order
  cart_items: CartItem
}

#  ---------------- Subscription -----------------------
type Subscription {
  cart_items(order_by: CartItemOrderByInput): CartItem
}
input CartItemOrderByInput {
  created_at: OrderByDirection
}
enum OrderByDirection {
  asc
  desc
}

#  ---------------- Subscription -----------------------
type Mutation {
  insert_cart_items(objects: [CartItem!]!): InsertCartItemResponse!
  update_cart_items(
    where: CartItemFilter # Use the input type for filtering
    _set: CartItemUpdate # Use the input type for updating
  ): UpdateCartQuantityResponse
}

type InsertCartItemResponse {
  affected_rows: Int!
}

# ---- Update Cart ----
type UpdateCartQuantityResponse {
  affected_rows: Int!
}

input CartItemFilter {
  variant_id: bigint!
}

input CartItemUpdate {
  cart_quantity: smallint!
}

## ------------------Types------------------------------

# Orders
type Order {
  created_at: String!
  id: bigint!
  customer_latitude: float8!
  customer_longitude: float8!
  delivery_address: String!
  delivery_fee: numeric!
  order_status: String!
  user_id: uuid!
  payment_id: String!
  payment_amount: numeric!
}

# Cart
type CartItem {
  id: bigint!
  image: String!
  mrp: numeric
  price: numeric!
  product_id: bigint!
  product_title: String!
  uom_name: String
  uom_value: String
  user_id: uuid!
  variant_id: bigint!
  cart_quantity: smallint!
}

# Scalars
scalar numeric
scalar bigint
scalar uuid
scalar smallint
scalar float8
